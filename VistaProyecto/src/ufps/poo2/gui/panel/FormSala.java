/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ufps.poo2.gui.panel;

import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import ufps.poo2.gui.controlador.Controlador;

/**
 *
 * @author USUARIO
 */
public class FormSala extends javax.swing.JFrame {

    /**
     * Creates new form FormSala
     */
    JLabel[] labelActivos;

    public FormSala() {
        initComponents();

    }

    FormUnirse uni;
    FormCrear cre;

    public FormSala(boolean x, FormUnirse k, FormCrear i) {
        initComponents();
        uni = k;
        cre = i;
        iniciar(x);
        iniciar();
        labelActivos = new JLabel[4];
        labelActivos[0] = lblJugador1;
        labelActivos[1] = lblJugador2;
        labelActivos[2] = lblJugador3;
        labelActivos[3] = lblJugador4;
        actualizarNombres();
    }
    Controlador controlador = new Controlador();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        panelPrincipal = new javax.swing.JPanel();
        lblTamanio = new javax.swing.JLabel();
        txtTam = new javax.swing.JTextField();
        panelJugadores = new javax.swing.JPanel();
        lblJugador1 = new javax.swing.JLabel();
        lblJugador2 = new javax.swing.JLabel();
        lblJugador3 = new javax.swing.JLabel();
        lblJugador4 = new javax.swing.JLabel();
        cmdEmpezar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        panelHost = new javax.swing.JPanel();
        lblIp = new javax.swing.JLabel();

        jButton2.setText("jButton2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblTamanio.setText("Tam n x n :");

        txtTam.setText("6");
        txtTam.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTamKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTamKeyTyped(evt);
            }
        });

        panelJugadores.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Jugadores"));

        lblJugador1.setText("Jugador 1 : libre");

        lblJugador2.setText("Jugador 2 : libre");

        lblJugador3.setText("Jugador 3 : libre");

        lblJugador4.setText("Jugador 4 : libre");

        javax.swing.GroupLayout panelJugadoresLayout = new javax.swing.GroupLayout(panelJugadores);
        panelJugadores.setLayout(panelJugadoresLayout);
        panelJugadoresLayout.setHorizontalGroup(
            panelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelJugadoresLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblJugador1, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                    .addComponent(lblJugador2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblJugador3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblJugador4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        panelJugadoresLayout.setVerticalGroup(
            panelJugadoresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelJugadoresLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblJugador1)
                .addGap(18, 18, 18)
                .addComponent(lblJugador2)
                .addGap(18, 18, 18)
                .addComponent(lblJugador3)
                .addGap(18, 18, 18)
                .addComponent(lblJugador4)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        cmdEmpezar.setText("Empezar");
        cmdEmpezar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEmpezarActionPerformed(evt);
            }
        });

        jButton1.setText("Cancelar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        panelHost.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        lblIp.setText("Esperando jugadores. tu ip es : en el puerto :");

        javax.swing.GroupLayout panelHostLayout = new javax.swing.GroupLayout(panelHost);
        panelHost.setLayout(panelHostLayout);
        panelHostLayout.setHorizontalGroup(
            panelHostLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelHostLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblIp, javax.swing.GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelHostLayout.setVerticalGroup(
            panelHostLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelHostLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblIp)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addComponent(panelJugadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelPrincipalLayout.createSequentialGroup()
                                .addComponent(lblTamanio)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtTam, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelPrincipalLayout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addComponent(cmdEmpezar))))))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTamanio)
                            .addComponent(txtTam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addComponent(cmdEmpezar)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1))
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelJugadores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmdEmpezarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEmpezarActionPerformed

        if (txtTam.getText().length() <= 0) {
            JOptionPane.showMessageDialog(this, "INGRESE TODOS LOS DATOS");
            return;
        }
        if (Integer.parseInt(txtTam.getText()) < 2 || Integer.parseInt(txtTam.getText()) > 17) {
            JOptionPane.showMessageDialog(this, "EL CAMPO PUEDE TENER (MINIMO 6 Y MAXIMO 17) CUADRADOS");
            return;
        }
        try {
            controlador.iniciarJuego(Integer.valueOf(txtTam.getText()));
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }


    }//GEN-LAST:event_cmdEmpezarActionPerformed

    private void txtTamKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTamKeyPressed

    }//GEN-LAST:event_txtTamKeyPressed

    private void txtTamKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTamKeyTyped
        char x = evt.getKeyChar();
        if (x < '0' || x > '9') {
            evt.consume();
        }

    }//GEN-LAST:event_txtTamKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        enJuego = false;
        if (controlador.acabar()) {
            acabar();
        }

    }//GEN-LAST:event_jButton1ActionPerformed
    public void acabar() {
        if (uni != null) {
            uni.getMain().iniciarUnirse();
        } else if (cre != null) {
            cre.getMain().iniciarCrear();
        }
    }

    private void iniciar() {
        Thread hilo = new Thread(new Runnable() {
            public void run() {
                int exito = -1;
                try {
                    exito = controlador.empezarPartido();
                } catch (Exception ex) {
                    ex.printStackTrace();
                }
                if (exito != 0) {
                    if (exito != -1) {

                        if (uni != null) {
                            enJuego = false;
                            uni.getMain().iniciarJuego(exito, FormSala.this);
                        } else if (cre != null) {
                            enJuego = false;
                            cre.getMain().iniciarJuego(exito, FormSala.this);
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "ERROR");
                    }
                }

            }
        });
        hilo.start();
    }
    boolean enJuego = true;

    private void actualizarNombres() {
        Thread hilo = new Thread(new Runnable() {
            public void run() {
                while (enJuego) {
                    for (int i = 0; i < labelActivos.length; i++) {
                        labelActivos[i].setText("Jugador " + (i + 1) + " : libre");
                    }
                    String activos[] = controlador.sacarNombres();                    
                    lblIp.setText("Esperando Jugadores en :" + activos[activos.length - 1]);
                    for (int i = 0; i < activos.length - 1; i++) {

                        labelActivos[i].setText(activos[i]);
                    }
                     try {
                        Thread.sleep(1550);
                        System.out.println("actualizando nombres de la sala");
                    } catch (InterruptedException ex) {
                        ex.printStackTrace();
                    }
                }
                

            }
        });
        hilo.start();
    }

    /**
     * @param args the command line arguments
     */
    private void iniciar(boolean x) {
        if (!x) {
            cmdEmpezar.setVisible(x);
            this.txtTam.setVisible(x);
            panelHost.setVisible(false);
            this.lblTamanio.setText("esperando inicio...");
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cmdEmpezar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel lblIp;
    private javax.swing.JLabel lblJugador1;
    private javax.swing.JLabel lblJugador2;
    private javax.swing.JLabel lblJugador3;
    private javax.swing.JLabel lblJugador4;
    private javax.swing.JLabel lblTamanio;
    private javax.swing.JPanel panelHost;
    private javax.swing.JPanel panelJugadores;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JTextField txtTam;
    // End of variables declaration//GEN-END:variables
}
